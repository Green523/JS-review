2017.5.16{
第六章
   1.JavaScript中的对象是基本数据类型（复合值，属性的无序组合，属性名是字符串，对象是从字符串到值的映射）.
   2.对象有自有属性：
          继承属性：对象的方法通常是继承属性（共享），基于原型（javaScript的核心特征）
   3.JavaScript是动态语言，可用于模拟静态对象，及静态类型语言的“结构体”
   4.对象中不能出现两个同名的属性
   5.对象的属性除了有"名"和"值"之外，每个属性还有"属性特性"，如下：
      可写：表示是否可以设置该属性的值
      可枚举：是否可以通过for/in循环返回该属性
      可配置：表明是否可以删除或修改该属性
     （ES5之前所有的属性都是可写可配置可枚举的）
   6.每个对象都拥有三个相关的对象特性
         对象原型（prototype）：指向原型对象
         对象的类（class）：标识对象类型的字符串
         对象的扩展标记（extension flag）：是否可以向该对象添加新属性
   7.三类Javascript对象：
         内置对象（native object）：由ES规范定义的对象或类：数组，函数，日期和正则
         宿主对象（host object）：有JS解释器所嵌入的宿主环境定义的，例如web浏览器.客户端JavaScript中表
								示网页结构的HTMLElement对象均是宿主对象（宿主环境定义的方法可当成普通的JavaScript
								函数对象，所以，宿主对象也可当作为内置对象）
		 自定义对象：由运行中的JavaScript代码产生创建
   8.两类属性：
		自有属性：直接在对象中定义的属性
		继承属性：在对象原型中定义的属性
		
	9.创建对象：
	9.1对象直接量：最直接简单，名/值对组成映射表
		eg:	var point= {x:0,y:0}
			var point2 = {x:point.x,y:point.y+1}	//属性值可以是表达式
			var book = {
					"main title":"JS"，
					"for":"属性名可以用保留字"，
					author：{						//该属性的值是一个对象
						firstbname:"David"			//這里的属性名没有引号
					}
			}
		对象直接量是一个表达式，這个表达式的每次运算都创建并初始化一个新的对象，每次计算对象直接量时
		也都会计算它的每个属性的值（如果在一个重复调用的函数体内使用了对象直接量，那么它将创建很多新的对象
		，并且每次创建的对象属性值可能不同）
	9.2 new对象		:new 构造函数；javascript中的原始类型都包含有内置构造函数
插播10.原型：每个Javascript对象（null除外）都有和另一个对象相关联。那个另一个对象就是原型，每一个对象都是从原型继承属性
				 所有通过直接量来创建的对象都具有同一个原型对象，并可以通过Object.prototype获得对原型对象的引用。
				 通过 new 构造函数创建的对象的原型就是构造函数的prototype属性值。
			 没有原型的对象不多，Object.prototype就是其中之一。它不继承任何属性。
			 大部分的自定义对象和内置对象都有一个继承自object.prototype的原型 。
			 eg：new Date（）创建的Date对象的都有从Date.prototype 和Object.prototype中继承原型。
				这一系列链接的原型对象就是“原型链”
	
	
	

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		


}
